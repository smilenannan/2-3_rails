機能をmodel, controller側に書き、デザインをview側に書くことで機能とデザインの分離が可能になる。アルゴリズムを書くプログラマがデザインもできるとは限らず、model, controllerとviewを分けることで、プログラマはアルゴリズムのみを、デザイナーはデザイン部分をというように分業化でき、効率的になる。また、一般的にデザインの方が変更が多いため、分けるメリットがある。コードが複雑になりすぎないようにする。
また、データの管理をmodelで行い、controllerはviewからユーザーの入力を受け取り、処理をする。controllerに条件分岐などの処理を書く。 controllerを作ることで、viewとmodelに変更が生じてもviewとmodel間のデータのやりとりの処理を書き換える必要がなくなる。

以上のようにmvcの三つの要素に分解することで分業ができ、作業が効率になり、また、書く要素の変更は他の要素と独立に行えるという利点がある。
